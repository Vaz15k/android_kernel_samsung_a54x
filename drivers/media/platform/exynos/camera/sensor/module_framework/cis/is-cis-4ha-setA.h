/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2022 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef IS_CIS_4HA_SET_A_H
#define IS_CIS_4HA_SET_A_H

#include "is-cis.h"
#include "is-cis-4ha.h"

/*
 * Reference File : 4HA_EVT00_Setfile_REV37.xlsx
 * EXT_MCLK : 26MHz
 */

const u16 sensor_4ha_setfile_A_Global[] = {
	0x0100, 0x00, 0x01,
	0x0A02, 0x7F, 0x01,
	0x3B45, 0x01, 0x01,
	0x3264, 0x01, 0x01,
	0x3290, 0x10, 0x01,
	0x0B05, 0x01, 0x01,
	0x3069, 0xC7, 0x01,
	0x3074, 0x06, 0x01,
	0x3075, 0x32, 0x01,
	0x3068, 0xF7, 0x01,
	0x30C6, 0x01, 0x01,
	0x301F, 0x20, 0x01,
	0x306B, 0x9A, 0x01,
	0x3091, 0x1F, 0x01,
	0x306E, 0x71, 0x01,
	0x306F, 0x28, 0x01,
	0x306D, 0x08, 0x01,
	0x3084, 0x16, 0x01,
	0x3070, 0x0F, 0x01,
	0x306A, 0x79, 0x01,
	0x30B0, 0xFF, 0x01,
	0x30C2, 0x05, 0x01,
	0x30C4, 0x06, 0x01,
	0x3081, 0x07, 0x01,
	0x307B, 0x85, 0x01,
	0x307A, 0x0A, 0x01,
	0x3079, 0x0A, 0x01,
	0x308A, 0x20, 0x01,
	0x308B, 0x08, 0x01,
	0x308C, 0x0B, 0x01,
	0x392F, 0x01, 0x01,
	0x3930, 0x00, 0x01,
	0x3924, 0x7F, 0x01,
	0x3925, 0xFD, 0x01,
	0x3C08, 0xFF, 0x01,
	0x3C09, 0xFF, 0x01,
	0x3C31, 0xFF, 0x01,
	0x3C32, 0xFF, 0x01,
};

/* 26M_4Lane */
const u16 sensor_4ha_setfile_A_3264x2448_30fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6C, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0x81, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x09, 0x01,
	0x0341, 0xEA, 0x01,
	0x0342, 0x0E, 0x01,
	0x0343, 0x68, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x08, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x08, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0xC7, 0x01,
	0x034A, 0x09, 0x01,
	0x034B, 0x97, 0x01,
	0x034C, 0x0C, 0x01,
	0x034D, 0xC0, 0x01,
	0x034E, 0x09, 0x01,
	0x034F, 0x90, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x0D, 0x01,
	0x0201, 0xD8, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x02, 0x01,
	0x0821, 0x9F, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	0x3929, 0x3F, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

const u16 sensor_4ha_setfile_A_2880x1980_30fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0301, 0x04, 0x1,
	0x0305, 0x05, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x6C, 0x1,
	0x3C1F, 0x00, 0x1,
	0x030D, 0x05, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x81, 0x1,
	0x3C17, 0x00, 0x1,
	0x0340, 0x09, 0x1,
	0x0341, 0xEA, 0x1,
	0x0342, 0x0E, 0x1,
	0x0343, 0x68, 0x1,
	0x0344, 0x00, 0x1,
	0x0345, 0xC8, 0x1,
	0x0346, 0x00, 0x1,
	0x0347, 0xF2, 0x1,
	0x0348, 0x0C, 0x1,
	0x0349, 0x07, 0x1,
	0x034A, 0x08, 0x1,
	0x034B, 0xAD, 0x1,
	0x034C, 0x0B, 0x1,
	0x034D, 0x40, 0x1,
	0x034E, 0x07, 0x1,
	0x034F, 0xBC, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x01, 0x1,
	0x0900, 0x00, 0x1,
	0x0901, 0x00, 0x1,
	0x0204, 0x00, 0x1,
	0x0205, 0x20, 0x1,
	0x0200, 0x0D, 0x1,
	0x0201, 0xD8, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x0820, 0x02, 0x1,
	0x0821, 0x9F, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x03, 0x1,
	0x3929, 0x3F, 0x1,
	0x0101, 0x00, 0x1,
	0x3941, 0x0F, 0x1,
	0x3942, 0x3D, 0x1,
};

const u16 sensor_4ha_setfile_A_2640x1980_30fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0301, 0x04, 0x1,
	0x0305, 0x05, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x6C, 0x1,
	0x3C1F, 0x00, 0x1,
	0x030D, 0x05, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x81, 0x1,
	0x3C17, 0x00, 0x1,
	0x0340, 0x09, 0x1,
	0x0341, 0xEA, 0x1,
	0x0342, 0x0E, 0x1,
	0x0343, 0x68, 0x1,
	0x0344, 0x01, 0x1,
	0x0345, 0x40, 0x1,
	0x0346, 0x00, 0x1,
	0x0347, 0xF2, 0x1,
	0x0348, 0x0B, 0x1,
	0x0349, 0x8F, 0x1,
	0x034A, 0x08, 0x1,
	0x034B, 0xAD, 0x1,
	0x034C, 0x0A, 0x1,
	0x034D, 0x50, 0x1,
	0x034E, 0x07, 0x1,
	0x034F, 0xBC, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x01, 0x1,
	0x0900, 0x00, 0x1,
	0x0901, 0x00, 0x1,
	0x0204, 0x00, 0x1,
	0x0205, 0x20, 0x1,
	0x0200, 0x0D, 0x1,
	0x0201, 0xD8, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x0820, 0x02, 0x1,
	0x0821, 0x9F, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x03, 0x1,
	0x3929, 0x3F, 0x1,
	0x0101, 0x00, 0x1,
	0x3941, 0x0F, 0x1,
	0x3942, 0x3D, 0x1,
};

const u16 sensor_4ha_setfile_A_2608x1956_30fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0301, 0x04, 0x1,
	0x0305, 0x05, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x6C, 0x1,
	0x3C1F, 0x00, 0x1,
	0x030D, 0x05, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x81, 0x1,
	0x3C17, 0x00, 0x1,
	0x0340, 0x09, 0x1,
	0x0341, 0xEA, 0x1,
	0x0342, 0x0E, 0x1,
	0x0343, 0x68, 0x1,
	0x0344, 0x01, 0x1,
	0x0345, 0x50, 0x1,
	0x0346, 0x00, 0x1,
	0x0347, 0xFE, 0x1,
	0x0348, 0x0B, 0x1,
	0x0349, 0x7F, 0x1,
	0x034A, 0x08, 0x1,
	0x034B, 0xA1, 0x1,
	0x034C, 0x0A, 0x1,
	0x034D, 0x30, 0x1,
	0x034E, 0x07, 0x1,
	0x034F, 0xA4, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x01, 0x1,
	0x0900, 0x00, 0x1,
	0x0901, 0x00, 0x1,
	0x0204, 0x00, 0x1,
	0x0205, 0x20, 0x1,
	0x0200, 0x0D, 0x1,
	0x0201, 0xD8, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x0820, 0x02, 0x1,
	0x0821, 0x9F, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x03, 0x1,
	0x3929, 0x3F, 0x1,
	0x0101, 0x00, 0x1,
	0x3941, 0x0F, 0x1,
	0x3942, 0x3D, 0x1,
};

const u16 sensor_4ha_setfile_A_1632x1224_30fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0301, 0x04, 0x1,
	0x0305, 0x05, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x6C, 0x1,
	0x3C1F, 0x00, 0x1,
	0x030D, 0x05, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x81, 0x1,
	0x3C17, 0x00, 0x1,
	0x0340, 0x09, 0x1,
	0x0341, 0xEA, 0x1,
	0x0342, 0x0E, 0x1,
	0x0343, 0x68, 0x1,
	0x0344, 0x00, 0x1,
	0x0345, 0x08, 0x1,
	0x0346, 0x00, 0x1,
	0x0347, 0x08, 0x1,
	0x0348, 0x0C, 0x1,
	0x0349, 0xC7, 0x1,
	0x034A, 0x09, 0x1,
	0x034B, 0x97, 0x1,
	0x034C, 0x06, 0x1,
	0x034D, 0x60, 0x1,
	0x034E, 0x04, 0x1,
	0x034F, 0xC8, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x03, 0x1,
	0x0900, 0x01, 0x1,
	0x0901, 0x22, 0x1,
	0x0204, 0x00, 0x1,
	0x0205, 0x20, 0x1,
	0x0200, 0x0D, 0x1,
	0x0201, 0xD8, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x0820, 0x02, 0x1,
	0x0821, 0x9F, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x03, 0x1,
	0x3929, 0x3F, 0x1,
	0x0101, 0x00, 0x1,
	0x3941, 0x0F, 0x1,
	0x3942, 0x3D, 0x1,
};

const u16 sensor_4ha_setfile_A_1632x916_30fps[] = {
	0x0136, 0x1A, 0x1,
	0x0137, 0x00, 0x1,
	0x0301, 0x04, 0x1,
	0x0305, 0x05, 0x1,
	0x0306, 0x00, 0x1,
	0x0307, 0x6C, 0x1,
	0x3C1F, 0x00, 0x1,
	0x030D, 0x05, 0x1,
	0x030E, 0x00, 0x1,
	0x030F, 0x81, 0x1,
	0x3C17, 0x00, 0x1,
	0x0340, 0x09, 0x1,
	0x0341, 0xEA, 0x1,
	0x0342, 0x0E, 0x1,
	0x0343, 0x68, 0x1,
	0x0344, 0x00, 0x1,
	0x0345, 0x08, 0x1,
	0x0346, 0x01, 0x1,
	0x0347, 0x3C, 0x1,
	0x0348, 0x0C, 0x1,
	0x0349, 0xC7, 0x1,
	0x034A, 0x08, 0x1,
	0x034B, 0x63, 0x1,
	0x034C, 0x06, 0x1,
	0x034D, 0x60, 0x1,
	0x034E, 0x03, 0x1,
	0x034F, 0x94, 0x1,
	0x0381, 0x01, 0x1,
	0x0383, 0x01, 0x1,
	0x0385, 0x01, 0x1,
	0x0387, 0x03, 0x1,
	0x0900, 0x01, 0x1,
	0x0901, 0x22, 0x1,
	0x0204, 0x00, 0x1,
	0x0205, 0x20, 0x1,
	0x0200, 0x0D, 0x1,
	0x0201, 0xD8, 0x1,
	0x0202, 0x00, 0x1,
	0x0203, 0x02, 0x1,
	0x0820, 0x02, 0x1,
	0x0821, 0x9F, 0x1,
	0x0822, 0x00, 0x1,
	0x0823, 0x00, 0x1,
	0x0112, 0x0A, 0x1,
	0x0113, 0x0A, 0x1,
	0x0114, 0x03, 0x1,
	0x3929, 0x3F, 0x1,
	0x0101, 0x00, 0x1,
	0x3941, 0x0F, 0x1,
	0x3942, 0x3D, 0x1,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u16 sensor_4ha_setfile_A_3264x1836_30fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6C, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0x81, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x09, 0x01,
	0x0341, 0xEA, 0x01,
	0x0342, 0x0E, 0x01,
	0x0343, 0x68, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x08, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x3A, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0xC7, 0x01,
	0x034A, 0x08, 0x01,
	0x034B, 0x65, 0x01,
	0x034C, 0x0C, 0x01,
	0x034D, 0xC0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0x2C, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x0D, 0x01,
	0x0201, 0xD8, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x02, 0x01,
	0x0821, 0x9F, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	0x3929, 0x3F, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u16 sensor_4ha_setfile_A_800x600_120fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6C, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0x81, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x02, 0x01,
	0x0341, 0x7A, 0x01,
	0x0342, 0x0E, 0x01,
	0x0343, 0x68, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x28, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x20, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0xA7, 0x01,
	0x034A, 0x09, 0x01,
	0x034B, 0x7F, 0x01,
	0x034C, 0x03, 0x01,
	0x034D, 0x20, 0x01,
	0x034E, 0x02, 0x01,
	0x034F, 0x58, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x07, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x44, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x0D, 0x01,
	0x0201, 0xD8, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x02, 0x01,
	0x0821, 0x9F, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	0x3929, 0x3F, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_3264x2448_30fps = {
	.setfile_index = SENSOR_4HA_3264X2448_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_3264x2448_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_3264x1836_30fps = {
	.setfile_index = SENSOR_4HA_3264X1836_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_3264x1836_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_2880x1980_30fps = {
	.setfile_index = SENSOR_4HA_2880X1980_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_2880x1980_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_2640x1980_30fps = {
	.setfile_index = SENSOR_4HA_2640X1980_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_2640x1980_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_2608x1956_30fps = {
	.setfile_index = SENSOR_4HA_2608X1956_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_2608x1956_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_1632x1224_30fps = {
	.setfile_index = SENSOR_4HA_1632X1224_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_1632x1224_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_1632x916_30fps = {
	.setfile_index = SENSOR_4HA_1632X916_30FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_1632x916_30fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x09EA,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

const struct sensor_cis_mode_info sensor_4ha_mode_info_A_800x600_120fps = {
	.setfile_index = SENSOR_4HA_800X600_120FPS,
	.setfile = SENSOR_REGS(sensor_4ha_setfile_A_800x600_120fps),

	.pclk = 280800000ULL,
	.frame_length_lines = 0x027A,
	.line_length_pck = 0x0E68,
	.max_analog_gain = 0x0200,
	.max_digital_gain = 0x0FFF,
	.min_cit = 0x4,
	.max_cit_margin = 6,
	.align_cit = 1,
	.remosaic_mode = false,
	.state_12bit = SENSOR_12BIT_STATE_OFF,
};

static const struct sensor_cis_mode_info *sensor_4ha_mode_infos_A[] = {
	&sensor_4ha_mode_info_A_3264x2448_30fps,
	&sensor_4ha_mode_info_A_3264x1836_30fps,
	&sensor_4ha_mode_info_A_2880x1980_30fps,
	&sensor_4ha_mode_info_A_2640x1980_30fps,
	&sensor_4ha_mode_info_A_2608x1956_30fps,
	&sensor_4ha_mode_info_A_1632x1224_30fps,
	&sensor_4ha_mode_info_A_1632x916_30fps,
	&sensor_4ha_mode_info_A_800x600_120fps,
};

static const struct sensor_4ha_private_data sensor_4ha_private_data_A = {
	.global = SENSOR_REGS(sensor_4ha_setfile_A_Global),
};

static const struct sensor_cis_info sensor_4ha_info_A = {
	.name = "4HA",
	.version = "4HA_EVT00_Setfile_REV37",
	.max_width = 3264,
	.max_height = 2448,
	.min_analog_gain = 0x20,
	.min_digital_gain = 0x100,
	.fine_integration_time = 0x1C5,
	.cit_compensation_threshold = 15,
	.use_group_param_hold = false,
	.mode_infos = sensor_4ha_mode_infos_A,
	.mode_count = ARRAY_SIZE(sensor_4ha_mode_infos_A),
	.priv = (void *)&sensor_4ha_private_data_A,
};

#endif
